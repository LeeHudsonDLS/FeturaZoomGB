CLOSE
;

;################################################
;; \file
;; Define motion for Fetura zoom unit. This is an extension of the 2 blade slits CS
;;
;; Original Author: Tom Cobb (2 blade slits)
;; Modified by: Lee Hudson
;;
;; Defined axes:
;; - X (addr 6) = Zoom percent
;;
;; Macros:
;; - COORD = 3  CS number, e.g. 2
;; - PLC = 18  PLC number, should be CS number+15, e.g. 17
;; - BP = 2  Axisnum for lens 2 (nearest USB port and camera), e.g. 1
;; - BM = 1  Axisnum for lens 1 (nearest sample), e.g. 3
;################################################

; Change to CS3
&3

; Set relevant axes to use kinematics
#2->I ; +ve blade
#1->I ; -ve blade

; These are set by motor_in_cs.template
#define BPMOVE P(4700+2)
#define BPMRES P(4800+2)
#define BPOFF  P(4900+2)
#define BMMOVE P(4700+1)
#define BMMRES P(4800+1)
#define BMOFF  P(4900+1)

; 5th order polynomial constants
#define c1 40.92819
#define c2 -0.7476464
#define c3 -0.1402239
#define c4 0.006035055
#define c5 -0.00007205061
#define c6 0.0000002317203

; Minimum centre position possible whilst still in focus with gap
#define CENTRE_MIN 11.5

; Maxiumum centre postion possible whilst still in focus - CENTRE_MIN
#define CENTRE_STROKE 33.5

; Calculate gap and centre from blade positions
#define BPPOS (BPMRES*P2+BPOFF)
#define BMPOS (BMMRES*P1+BMOFF)
#define ZOOM Q7
#define CENTRE Q117

OPEN FORWARD
CLEAR
    CENTRE = (BPPOS + BMPOS)/2
	ZOOM = (CENTRE - CENTRE_MIN)*(100/CENTRE_STROKE) 
CLOSE

;P3=EXP(P2*LN(P1))
; Calculate blade positions in cts from gap and centre
#define BPPOS Q228
#define BMPOS Q229
#define GAP Q217
#define CENTRE Q218
OPEN INVERSE
CLEAR
	CENTRE = (ZOOM/(100/CENTRE_STROKE)) + CENTRE_MIN
	GAP = c1+c2*CENTRE+c3*EXP(2*LN(CENTRE))+c4*EXP(3*LN(CENTRE))+c5*EXP(4*LN(CENTRE))+c6*EXP(5*LN(CENTRE))
    BPPOS = CENTRE + GAP/2
    BMPOS = CENTRE - GAP/2
    ; then in cts
    P2 = (BPPOS - BPOFF)/BPMRES
    P1 = (BMPOS - BMOFF)/BMMRES
CLOSE

; A PLC(sx+15) needs to be made to do position reporting
; Readbacks should be in &{axisnum}Q81..89
; As forward kinematic, but with Px = mx62/(Ix08*32)
#define BPPOS (BPMRES*m262/(I208*32)+BPOFF)
#define BMPOS (BMMRES*m162/(I108*32)+BMOFF)
#define ZOOM Q87
#define CENTRE Q220
OPEN PLC18
CLEAR
    ADDRESS&3
	
    CENTRE = (BPPOS + BMPOS)/2
	ZOOM = (CENTRE - CENTRE_MIN)*(100/CENTRE_STROKE) 
    ; If blade motor record did the last move, set demands = readbacks
    if (BPMOVE = 1)
    or (BMMOVE = 1)
        BPMOVE = 0
        BMMOVE = 0
        Q77 = Q87
    endif
CLOSE
ENABLE PLC18
